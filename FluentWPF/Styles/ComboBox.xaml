<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="clr-namespace:FluentWPF.Controls">
    <Style x:Key="DefaultFluentComboBoxStyle" TargetType="ui:FluentComboBox">
        <Setter Property="Background" Value="{DynamicResource ControlFillColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource DefaultFluentComboBoxItemStyle}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource AppTextFillBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AcceptColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:FluentComboBox">
                    <Grid
                        x:Name="templateRoot"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ui:FluentToggleButton
                            Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{DynamicResource ExpanderUIToggleButton}" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Padding="5,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            Foreground="{TemplateBinding Foreground}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Text="{TemplateBinding Text}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Grid>
                                                    <Border
                                                        x:Name="MainBorder"
                                                        BorderBrush="{DynamicResource AcceptColor}"
                                                        BorderThickness="0,0,0,1"
                                                        CornerRadius="4" />
                                                    <ScrollViewer
                                                        x:Name="PART_ContentHost"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Focusable="false"
                                                        HorizontalScrollBarVisibility="Hidden"
                                                        VerticalScrollBarVisibility="Hidden" />
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <ThicknessAnimation
                                                                        Storyboard.TargetName="MainBorder"
                                                                        Storyboard.TargetProperty="BorderThickness"
                                                                        From="0"
                                                                        To="0,0,0,1"
                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused">
                                                                <Storyboard>
                                                                    <ThicknessAnimation
                                                                        Storyboard.TargetName="MainBorder"
                                                                        Storyboard.TargetProperty="BorderThickness"
                                                                        From="0,0,0,1"
                                                                        To="0"
                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="False">
                                                        <Setter Property="BorderThickness" Value="0,0,0,0" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Popup
                            x:Name="PAPR_Popup"
                            Grid.Column="1"
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="Fade"
                            VerticalOffset="5">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    Padding="5"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="5">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource DefaultPageBackgroundColor}" />
                                    </Border.Background>
                                    <ScrollViewer
                                        HorizontalScrollBarVisibility="Hidden"
                                        SnapsToDevicePixels="True"
                                        VerticalScrollBarVisibility="Hidden">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderUIToggleButton" TargetType="{x:Type ui:FluentToggleButton}">

        <Grid Margin="{TemplateBinding Margin}">
            <Border
                x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Content="{TemplateBinding Content}"
                    SnapsToDevicePixels="True" />
                <ui:FontIcon
                    x:Name="path"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FocusVisualStyle="{x:Null}"
                    FontSize="12"
                    Foreground="{TemplateBinding Foreground}"
                    Glyph="ChevronDown"
                    RenderTransformOrigin="0.5, 0.5">
                    <ui:FontIcon.RenderTransform>
                        <RotateTransform Angle="0" />
                    </ui:FontIcon.RenderTransform>
                </ui:FontIcon>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                To="180"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                To="0"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0.2" Duration="00:00:00.137">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0.8" Duration="00:00:00.137">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultFluentComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource AppTextFillBrush}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="SelectedLine"
                            Grid.Column="0"
                            Width="2.5"
                            Height="14"
                            Margin="0,0,-3,0"
                            HorizontalAlignment="Left"
                            Panel.ZIndex="2"
                            Background="{DynamicResource AcceptColor}"
                            CornerRadius="2"
                            Opacity="0"
                            Visibility="Visible">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform01" CenterY="0" ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                        </Border>
                        <Border
                            x:Name="MainBorder"
                            Grid.ColumnSpan="2"
                            Padding="5"
                            Background="{DynamicResource ComboBoxSelectItemMouseOverBrush}"
                            CornerRadius="4"
                            Opacity="0"
                            SnapsToDevicePixels="true" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MainBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedLine"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedLine"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" />
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>